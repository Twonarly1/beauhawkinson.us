{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\"\nimport remarkGfm from \"remark-gfm\"\nimport rehypePrettyCode from \"rehype-pretty-code\"\nimport rehypeSlug from \"rehype-slug\"\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\"\n\nconst Project = defineDocumentType(() => ({\n    name: \"Project\",\n    filePathPattern: `**/*.mdx`,\n    contentType: \"mdx\",\n    fields: {\n        title: {\n            type: \"string\",\n            description: \"The title of the post\",\n            required: true,\n        },\n        date: {\n            type: \"date\",\n            description: \"The date of the post\",\n            required: true,\n        },\n        summary: {\n            type: \"string\",\n            required: true,\n        },\n    },\n    computedFields: {\n        url: {\n            type: \"string\",\n            resolve: (doc) => `/projects/${doc._raw.flattenedPath}`,\n        },\n    },\n}))\n\nexport default makeSource({\n    contentDirPath: \"./src/content\",\n    documentTypes: [Project],\n    mdx: {\n        remarkPlugins: [remarkGfm],\n        rehypePlugins: [\n            rehypeSlug,\n            [\n                rehypePrettyCode,\n                {\n                    theme: \"one-dark-pro\",\n                    onVisitLine(node) {\n                        // Prevent lines from collapsing in `display: grid` mode, and allow empty\n                        // lines to be copy/pasted\n                        if (node.children.length === 0) {\n                            node.children = [{ type: \"text\", value: \" \" }]\n                        }\n                    },\n                    onVisitHighlightedLine(node) {\n                        node.properties.className.push(\"line--highlighted\")\n                    },\n                    onVisitHighlightedWord(node) {\n                        node.properties.className = [\"word--highlighted\"]\n                    },\n                },\n            ],\n            [\n                rehypeAutolinkHeadings,\n                {\n                    properties: {\n                        className: [\"anchor\"],\n                    },\n                },\n            ],\n        ],\n    },\n})\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AAEnC,IAAM,UAAU,mBAAmB,OAAO;AAAA,EACtC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,KAAK;AAAA,MACD,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,aAAa,IAAI,KAAK,aAAa;AAAA,IACzD;AAAA,EACJ;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAAA,EACvB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,YAAY,MAAM;AAGd,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YACjD;AAAA,UACJ;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,QAAQ;AAAA,UACxB;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
